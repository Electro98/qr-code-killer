# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QR.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import (QWidget, QPushButton, QLineEdit,
                             QInputDialog, QApplication, QFileDialog, QMainWindow, QTextEdit, QAction)
from PyQt5.QtGui import QIcon
from PIL import Image
from read_create.main import create_encoded_image



class Ui_QR(object):
    def setupUi_code(self, QR):
        QR.setObjectName("QR")
        QR.resize(800, 512)
        QR.setMinimumSize(QtCore.QSize(1000, 512))
        QR.setMaximumSize(QtCore.QSize(1000, 512))
        QR.setAccessibleName("")
        QR.setStyleSheet("selection-background-color: rgb(191, 63, 0);\n"
"color: rgb(0, 0, 0);")
        self.centralwidget = QtWidgets.QWidget(QR)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(430, 220, 141, 61))
        self.pushButton.setStyleSheet("background-color: rgb(176, 173, 177);\n"
"\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(8, 20, 983, 50))
        self.lineEdit.setMinimumSize(QtCore.QSize(983, 50))
        self.lineEdit.setStatusTip("")
        self.lineEdit.setAccessibleName("")
        self.lineEdit.setAutoFillBackground(False)
        self.lineEdit.setStyleSheet("")
        self.lineEdit.setText("")
        self.lineEdit.setMaxLength(32765)
        self.lineEdit.setCursorPosition(0)
        self.lineEdit.setCursorMoveStyle(QtCore.Qt.VisualMoveStyle)
        self.lineEdit.setObjectName("lineEdit")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(40, 80, 381, 381))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.frame2 = QtWidgets.QFrame(self.centralwidget)
        self.frame2.setGeometry(QtCore.QRect(580, 80, 381, 381))
        self.frame2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame2.setObjectName("frame2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 80, 381, 381))
        self.label.setMinimumSize(QtCore.QSize(311, 381))
        self.label.setObjectName("label_1")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(580, 80, 381, 381))
        self.label_2.setMinimumSize(QtCore.QSize(311, 381))
        self.label_2.setObjectName("label_2")
        QR.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(QR)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        self.menufile = QtWidgets.QMenu(self.menubar)
        self.menufile.setObjectName("menufile")
        QR.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(QR)
        self.statusbar.setObjectName("statusbar")
        QR.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(QR)
        self.action.setObjectName("action")
        self.actionSave_as = QtWidgets.QAction(QR)
        self.actionSave_as.setObjectName("actionSave_as")
        self.menufile.addAction(self.action)
        self.menufile.addSeparator()
        self.menufile.addAction(self.actionSave_as)
        self.menubar.addAction(self.menufile.menuAction())

        self.retranslateUi(QR)
        QtCore.QMetaObject.connectSlotsByName(QR)

   #     self.pushButton.clicked.connect(self.importText)
        self.action.triggered.connect(self.openPicture)
        self.pushButton.clicked.connect(self.show_qr_pic)
        self.actionSave_as.triggered.connect(self.save_as)

    def retranslateUi(self, QR):
        _translate = QtCore.QCoreApplication.translate
        QR.setWindowTitle(_translate("QR", "QR creater"))
        self.pushButton.setText(_translate("QR", "Преобразовать в код"))
        self.lineEdit.setToolTip(_translate("QR", "<html><head/><body><p><br/></p></body></html>"))
        self.lineEdit.setWhatsThis(_translate("QR", "<html><head/><body><p>Введите текст который нужно закодировать...</p></body></html>"))
        self.lineEdit.setPlaceholderText(_translate("QR", "Введите текст для кодирвоания"))
        self.label_2.setText(_translate("QR", "                Место для QR изображения"))
        self.label.setText(_translate("QR", "                 Место для изображения"))
        self.menufile.setTitle(_translate("QR", "Файл"))
        self.action.setText(_translate("QR", "Загрузить картинку"))
        self.action.setIconText(_translate("QR", "Загрузить картинку"))
        self.actionSave_as.setText(_translate("QR", "Сохранить как"))

    def openPicture(self):
        filename = QFileDialog.getOpenFileName()
        path = filename[0]
        self.label.setPixmap(QtGui.QPixmap(path))
        self.label.setScaledContents(True)
        self.label.setOpenExternalLinks(False)
        self.label.setObjectName("label")
        img = Image.open(path)
        img.save("picture.jpeg")

    def show_qr_pic(self):
        text = self.lineEdit.text()
        x = create_encoded_image(Image.open("picture.jpeg"), text)
        x.save("qr_picture.jpg")
        self.label_2.setPixmap(QtGui.QPixmap("qr_picture.jpeg"))
        self.label_2.setScaledContents(True)
        self.label_2.setOpenExternalLinks(False)

    def save_as(self):
        save = QFileDialog.getSaveFileName()
        path = save[0]
        print(path)
        import cv2
        import os
        img = cv2.imread('qr_picture.jpeg', 1)
        cv2.imwrite(os.path.join(path), img)
        cv2.waitKey(0)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    QR = QtWidgets.QMainWindow()
    ui = Ui_QR()
    ui.setupUi_code(QR)
    QR.show()
    sys.exit(app.exec_())
